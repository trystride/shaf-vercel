"use client";
import { useState } from "react";

export default function InputGroup(props: any) {
	const {
		name,
		label,
		value,
		type,
		placeholder,
		handleChange,
		height = "52px",
		required,
		maxlength,
	} = props;
	const [inputType, setInputType] = useState(type);

	return (
		<>
			<label
				htmlFor={name}
				className='mb-2.5 block font-satoshi text-base font-medium text-dark dark:text-white'
			>
				{label} {required && <span className='text-red-500'>*</span>}
			</label>

			<div className='relative'>
				<input
					type={inputType}
					placeholder={placeholder}
					value={value}
					onChange={handleChange ? (e) => handleChange(e) : undefined}
					name={name}
					className={`w-full rounded-lg border border-gray-3 px-5.5 py-3 text-dark outline-none ring-offset-1 duration-300 focus:shadow-input focus:ring-primary/20 dark:border-stroke-dark dark:bg-transparent dark:text-white dark:focus:border-transparent`}
					style={{ height: height }}
					required={required}
					maxLength={maxlength}
				/>
				{type === "password" && (
					<span className='absolute right-5 top-1/2 -translate-y-1/2 text-body dark:text-gray-6'>
						{inputType === "password" ? (
							<svg
								width='25'
								height='24'
								viewBox='0 0 25 24'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
								onClick={() => setInputType("text")}
							>
								<path
									fillRule='evenodd'
									clipRule='evenodd'
									d='M12.5 8.25C10.4289 8.25 8.75 9.92893 8.75 12C8.75 14.0711 10.4289 15.75 12.5 15.75C14.5711 15.75 16.25 14.0711 16.25 12C16.25 9.92893 14.5711 8.25 12.5 8.25ZM10.25 12C10.25 10.7574 11.2574 9.75 12.5 9.75C13.7426 9.75 14.75 10.7574 14.75 12C14.75 13.2426 13.7426 14.25 12.5 14.25C11.2574 14.25 10.25 13.2426 10.25 12Z'
									fill='currentColor'
								/>
								<path
									fillRule='evenodd'
									clipRule='evenodd'
									d='M12.5 3.25C7.98587 3.25 4.94529 5.9542 3.18057 8.24686L3.14874 8.2882C2.74964 8.80653 2.38206 9.28392 2.13269 9.8484C1.86564 10.4529 1.75 11.1117 1.75 12C1.75 12.8883 1.86564 13.5471 2.13269 14.1516C2.38206 14.7161 2.74964 15.1935 3.14875 15.7118L3.18057 15.7531C4.94529 18.0458 7.98587 20.75 12.5 20.75C17.0141 20.75 20.0547 18.0458 21.8194 15.7531L21.8512 15.7118C22.2504 15.1935 22.6179 14.7161 22.8673 14.1516C23.1344 13.5471 23.25 12.8883 23.25 12C23.25 11.1117 23.1344 10.4529 22.8673 9.8484C22.6179 9.28391 22.2504 8.80652 21.8512 8.28818L21.8194 8.24686C20.0547 5.9542 17.0141 3.25 12.5 3.25ZM4.36922 9.1618C5.99864 7.04492 8.65036 4.75 12.5 4.75C16.3496 4.75 19.0014 7.04492 20.6308 9.1618C21.0694 9.73159 21.3263 10.0721 21.4952 10.4545C21.6532 10.812 21.75 11.2489 21.75 12C21.75 12.7511 21.6532 13.188 21.4952 13.5455C21.3263 13.9279 21.0694 14.2684 20.6308 14.8382C19.0014 16.9551 16.3496 19.25 12.5 19.25C8.65036 19.25 5.99864 16.9551 4.36922 14.8382C3.93064 14.2684 3.67374 13.9279 3.50476 13.5455C3.34684 13.188 3.25 12.7511 3.25 12C3.25 11.2489 3.34684 10.812 3.50476 10.4545C3.67374 10.0721 3.93063 9.73159 4.36922 9.1618Z'
									fill='currentColor'
								/>
							</svg>
						) : (
							<svg
								width='25'
								height='24'
								viewBox='0 0 25 24'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
								onClick={() => setInputType("password")}
							>
								<path
									fillRule='evenodd'
									clipRule='evenodd'
									d='M22.7954 6.31059C23.1761 6.47376 23.3524 6.91467 23.1893 7.29539L22.4999 6.99995C23.1893 7.29539 23.1894 7.29521 23.1893 7.29539L23.1886 7.29707L23.1875 7.29955L23.1843 7.30691L23.1736 7.33099C23.1646 7.35112 23.1518 7.37934 23.1352 7.41502C23.1019 7.48637 23.0533 7.58769 22.9888 7.7141C22.8599 7.96675 22.6675 8.32063 22.4084 8.73641C21.9828 9.41945 21.3724 10.2776 20.5619 11.1301L21.5303 12.0985C21.8231 12.3913 21.8231 12.8662 21.5303 13.1591C21.2374 13.452 20.7625 13.452 20.4696 13.1591L19.469 12.1585C18.8093 12.7112 18.0528 13.23 17.195 13.6562L18.1286 15.0909C18.3545 15.4381 18.2562 15.9027 17.909 16.1286C17.5618 16.3545 17.0972 16.2562 16.8713 15.909L15.7821 14.2351C15.0028 14.4896 14.159 14.6626 13.2499 14.7246V16.4999C13.2499 16.9142 12.9141 17.2499 12.4999 17.2499C12.0857 17.2499 11.7499 16.9142 11.7499 16.4999V14.7246C10.8689 14.6645 10.0491 14.5002 9.28982 14.2584L8.21575 15.9091C7.98984 16.2562 7.52526 16.3546 7.17807 16.1287C6.83089 15.9027 6.73257 15.4382 6.95847 15.091L7.87089 13.6887C7.0065 13.2666 6.24381 12.7501 5.57842 12.1982L4.61744 13.1592C4.32455 13.4521 3.84968 13.4521 3.55678 13.1592C3.26389 12.8663 3.26389 12.3914 3.55678 12.0985L4.48055 11.1748C3.65599 10.3151 3.03525 9.4465 2.60277 8.75462C2.33984 8.33398 2.1446 7.97559 2.01388 7.71964C1.94848 7.59157 1.8991 7.48889 1.86537 7.41658C1.8485 7.38042 1.83553 7.35183 1.82641 7.33143L1.81562 7.30704L1.81238 7.29959L1.81129 7.29708L1.81088 7.29613C1.81081 7.29595 1.81056 7.29539 2.49992 6.99995L1.81088 7.29613C1.64772 6.91541 1.82376 6.47376 2.20448 6.31059C2.58489 6.14756 3.02539 6.3235 3.18888 6.70357C3.18882 6.70344 3.18894 6.7037 3.18888 6.70357L3.18983 6.70576L3.19591 6.71947C3.2018 6.73267 3.2114 6.75386 3.22472 6.78243C3.25139 6.83959 3.29296 6.9262 3.34976 7.03742C3.46345 7.26004 3.63762 7.58022 3.87472 7.95955C4.35033 8.72042 5.07157 9.70704 6.05561 10.6215C6.92151 11.4263 7.98259 12.1675 9.25165 12.6558C10.2061 13.023 11.2854 13.2499 12.4999 13.2499C13.7416 13.2499 14.842 13.0127 15.8124 12.6308C17.0738 12.1343 18.1277 11.3882 18.9866 10.5819C19.9562 9.67191 20.6668 8.69511 21.1354 7.94315C21.369 7.56825 21.5405 7.25221 21.6525 7.03262C21.7085 6.9229 21.7494 6.83752 21.7757 6.78119C21.7888 6.75304 21.7983 6.73217 21.8041 6.71919L21.81 6.70571L21.8106 6.70451C21.8105 6.70461 21.8106 6.70441 21.8106 6.70451M22.7954 6.31059C22.4147 6.14746 21.9738 6.32399 21.8106 6.70451L22.7954 6.31059ZM3.18888 6.70357C3.18882 6.70344 3.18894 6.7037 3.18888 6.70357V6.70357Z'
									fill='currentColor'
								/>
							</svg>
						)}
					</span>
				)}
			</div>
		</>
	);
}
